---
// src/components/ItemCard.astro

// Defines the props that the component expects to receive.
export interface Props {
  id: string;
  title: string;
  status: 'lost' | 'found';
  // VERBESSERUNG: category und location sind jetzt optional, falls sie nicht als Name vorliegen.
  category?: string;
  location?: string;
  date: string;
}

const { id, title, status, category, location, date } = Astro.props;

// Determines the CSS classes for the card's background and border based on the status.
const cardClasses = 
  status === 'lost' 
    ? 'bg-red-50 border-red-200' 
    : 'bg-green-50 border-green-200';

// Determines the CSS classes for the status badge.
const badgeClasses = 
  status === 'lost'
    ? 'bg-red-100 text-red-800'
    : 'bg-green-100 text-green-800';
---

<div class={`p-4 rounded-lg shadow-md border flex flex-col h-full ${cardClasses}`}>
  <div class="flex justify-between items-start mb-2">
    <h3 class="font-bold text-lg text-slate-800">{title}</h3>
    
    <span class={`px-2 py-0.5 rounded-full text-xs font-semibold ${badgeClasses}`}>
      {status === 'lost' ? 'Verloren' : 'Gefunden'}
    </span>
  </div>

  <!-- Zeigt die Kategorie nur an, wenn sie auch einen Wert hat -->
  {category && <p class="text-sm text-slate-600 mb-4">{category}</p>}
  
  <div class="mt-auto space-y-2 text-sm text-slate-700">
    <!-- Zeigt den Ort nur an, wenn er einen Wert hat -->
    {location && (
      <div class="flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" /><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" /></svg>
        <span>{location}</span>
      </div>
    )}
    <div class="flex items-center">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" /></svg>
      <span>{date}</span>
    </div>
  </div>

  <a href={`/items/${id}`} class="mt-4 text-blue-600 hover:underline font-semibold text-sm">
    Mehr lesen &rarr;
  </a>
</div>
