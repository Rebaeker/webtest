<!-- Navbar für SPA -->
 <nav class="bg-white w-full relative z-10">
    <div class="max-w-6xl mx-auto px-4 py-4 flex items-center justify-between">
  
    <!-- Logo links, verlinkt zur Startseite -->
      <a href="/" class="text-xl font-bold text-blue-600 hover:text-blue-700">
        Lost and Found
      </a>
  
      <!-- Burger-Menü für Mobil -->
      <input id="nav-toggle" type="checkbox" class="peer hidden" />
      <label for="nav-toggle" class="cursor-pointer md:hidden">
        <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16"/>
        </svg>
      </label>
  
      <!-- Navigation + Login rechts -->
      <div class="hidden peer-checked:flex absolute top-full left-0 w-full flex-col gap-4 bg-white px-4 py-4
                  md:flex md:static md:flex-row md:items-center md:gap-6 md:ml-auto md:w-auto">
  
        <!-- Navigation zu den Unterseiten -->
        <ul class="flex flex-col md:flex-row md:gap-6 md:items-center md:ml-auto">
          <li><a href="/items/" class="text-xl text-gray-700 hover:text-blue-600">Gegenstände</a></li>
          <li><a href="/report/" class="text-xl text-gray-700 hover:text-blue-600" id="reportLink">Meldeformular</a></li>
          <li><a href="/aboutus/" class="text-xl text-gray-700 hover:text-blue-600">Über uns</a></li>
        </ul>
  
        <!-- User Info / Login Button -->
        <div id="authSection" class="md:ml-6">
          <!-- Login Button, wird angezeigt wenn nicht eingeloogt -->
          <a href="/login/" id="loginButton"
            class="text-xl border border-blue-600 text-blue-600 rounded px-4 py-2 hover:bg-blue-600 hover:text-white transition">
            Login
          </a>
          
          <!-- User Info, wird angezeigt wenn eingeloggt-->
          <div id="userInfo" class="hidden items-center space-x-4">
            <a href="/profile/" id="profileLink" class="text-gray-700 hover:text-blue-600 transition-colors duration-200" title="Profil anzeigen">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
            </a>
            <button id="logoutButton" 
                    class="text-xl border border-red-600 text-red-600 rounded px-4 py-2 hover:bg-red-600 hover:text-white transition">
              Logout
            </button>
          </div>
        </div>
      </div>
    </div>
  </nav>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    checkAuthStatus();
    
    // Logout
    const logoutButton = document.getElementById('logoutButton');
    if (logoutButton) {
      logoutButton.addEventListener('click', async () => {
        try {
          await fetch('/api/auth', { method: 'DELETE' });
          localStorage.removeItem('user');
          updateAuthUI(null);
          window.location.href = '/';
        } catch (error) {
          console.error('Logout error:', error);
        }
      });
    }
  });

  async function checkAuthStatus() {
    try {
      // Check localStorage first for immediate UI update
      const localUser = localStorage.getItem('user');
      if (localUser) {
        const user = JSON.parse(localUser);
        updateAuthUI(user);
      }

      // Then verify with server
      const response = await fetch('/api/auth');
      const result = await response.json();
      
      if (result.success === 'ok' && result.isAuthenticated) {
        localStorage.setItem('user', JSON.stringify(result.user));
        updateAuthUI(result.user);
      } else {
        localStorage.removeItem('user');
        updateAuthUI(null);
      }
    } catch (error) {
      console.error('Auth check error:', error);
      updateAuthUI(null);
    }
  }

  function updateAuthUI(user) {
    const loginButton = document.getElementById('loginButton');
    const userInfo = document.getElementById('userInfo');

    if (user) {
      // User is logged in
      loginButton.classList.add('hidden');
      userInfo.classList.remove('hidden');
      userInfo.classList.add('flex');
    } else {
      // User is not logged in
      loginButton.classList.remove('hidden');
      userInfo.classList.add('hidden');
      userInfo.classList.remove('flex');
    }
  }

  // Make functions globally available
  window.checkAuthStatus = checkAuthStatus;
  window.updateAuthUI = updateAuthUI;
</script>